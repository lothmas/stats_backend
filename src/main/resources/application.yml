#server:
#  port: ${server.port}
#  context-path: /iqa

#db:
# driver: com.mysql.jdbc.Driver
# url: jdbc:mysql://localhost:3306/iqa?zeroDateTimeBehavior=convertToNull&useUnicode=true&characterEncoding=UTF-8&useLegacyDatetimeCode=false&serverTimezone=Europe/London
# username: root
# password: l0u1srutendo
#
##Hibernate Configuration:
#hibernate:
# dialect: org.hibernate.dialect.MySQLInnoDBDialect
# show_sql: true
# hbm2ddl.auto: validate
# ddl-auto: none
#entitymanager:
# packages:
#  to:
#   scan: com.model
#
#security:
#  basic:
#    enabled: false

# DataSource settings: set here your own configurations for the database
# connection. In this example we have "netgloo_blog" as database name and
# "root" as username and password.
spring:
  http:
      multipart:
          max-file-size: 20MB
          max-request-size: 20MB

  datasource:
    driver: com.mysql.jdbc.Driver
    url: jdbc:mysql://localhost:3306/stats?zeroDateTimeBehavior=convertToNull&useUnicode=true&characterEncoding=UTF-8&useLegacyDatetimeCode=false&serverTimezone=Europe/London
    username: root
    password: l0u1srutendo

# Keep the connection alive if idle for a long time (needed in production)
    testWhileIdle: true
    validationQuery: SELECT 1

# Show or not log for each sql query
  jpa:
    show-sql: true

# Hibernate ddl auto (create, create-drop, update)
    hibernate:

#
### Naming strategy
      naming-strategy: org.hibernate.cfg.ImprovedNamingStrategy
      ddl-auto: update

# Use spring.jpa.properties.* for Hibernate native properties (the prefix is
# stripped before adding them to the entity manager)

# The SQL dialect makes Hibernate generate better SQL for the chosen database
    properties:
      hibernate:
        dialect: org.hibernate.dialect.MySQL5InnoDBDialect
        current_session_context_class: org.springframework.orm.hibernate5.SpringSessionContext


security:
  basic:
    enabled: false

  thymeleaf:
    prefix: classpath:/templates

